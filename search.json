[{"path":"https://fletchlives15.github.io/nhlscRaper/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 nhlscrapR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fletchlives15.github.io/nhlscRaper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fletcher Ekern. Author, maintainer.","code":""},{"path":"https://fletchlives15.github.io/nhlscRaper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ekern F (2023). nhlscrRaper: NHL API scraper. R package version 0.0.0.9000, https://fletchlives15.github.io/nhlscRaper/, https://github.com/Fletchlives15/nhlscRaper.","code":"@Manual{,   title = {nhlscrRaper: NHL API scraper},   author = {Fletcher Ekern},   year = {2023},   note = {R package version 0.0.0.9000, https://fletchlives15.github.io/nhlscRaper/},   url = {https://github.com/Fletchlives15/nhlscRaper}, }"},{"path":"https://fletchlives15.github.io/nhlscRaper/index.html","id":"nhlscrraper","dir":"","previous_headings":"","what":"NHL API scraper","title":"NHL API scraper","text":"goal nhlscrRaper allow someone scrape data NHL API used analysis. Currently, functions pull rosters, skater/goalie summary stats, team information, game information, event data single game full date range (specified game ids).","code":""},{"path":"https://fletchlives15.github.io/nhlscRaper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NHL API scraper","text":"already downloaded: install.packages(\"devtools\") install package: devtools::install_github(\"Fletchlives15/nhlscRaper\") install.packages(\"nhlscRaper\") Lastly, call package: library(nhlscRaper)","code":""},{"path":"https://fletchlives15.github.io/nhlscRaper/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"NHL API scraper","text":"Team roster information: call teams: teams <- nhl_teams() select team teams want: det_rw <- teams[team_id == 17][,tri_code] Input years want: players <- roster_info(team_tricode = det_rw, year_start = 2022, year_end = 2023) want players specific year can leave “team_tricode” empty just call years. Summary skater/goalie stats: just want summary stats year need specify years want. skater <- skater_stats(year_start = 2022, year_end = 2023) goalies <- goalie_stats(year_start = 2022, year_end = 2023) Event Data: Single Game: Find games specified years: games <- game_info(year_start = 2022, year_end = 2023) Pull specific game id: game_id <- games[,game_id[1]] Run function: one_game_events <- game_events(game_id = game_id) Multiple Games: Find games specified years: games <- game_info(year_start = 2022, year_end = 2023) Pull game ids: game_ids <- games[,game_id] Run function: multi_game_events <- all_game_events(game_ids = game_ids)","code":""},{"path":"https://fletchlives15.github.io/nhlscRaper/news/index.html","id":"nhlscrraper-development-version","dir":"Changelog","previous_headings":"","what":"nhlscrRaper (development version)","title":"nhlscrRaper (development version)","text":"Initial CRAN submission.","code":""}]
